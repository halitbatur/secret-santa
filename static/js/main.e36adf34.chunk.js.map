{"version":3,"sources":["components/SecretSanta.js","resources/santagif.gif","App.js","reportWebVitals.js","index.js"],"names":["SecretSanta","React","useState","secretSantas","setSecertSantas","email","name","formInput","setFormInput","password","setPassword","Container","Row","style","width","margin","Form","Group","className","controlId","Control","type","placeholder","value","onChange","e","target","Text","Button","variant","onClick","preventDefault","handleButtonClick","display","justifyContent","flexWrap","alignItems","map","secretSanta","Badge","bg","prevState","filter","item","newSantas","santasCopy","length","i","randomIndex","Math","floor","random","randomSanta","push","splice","forEach","person","window","Email","send","Host","Username","Password","To","From","Subject","Body","then","alert","sendEmails","App","src","santaGif","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e36adf34.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form, Button, Badge, Container, Row } from \"react-bootstrap\";\n\nfunction SecretSanta() {\n  const [secretSantas, setSecertSantas] = React.useState([]);\n  const [formInput, setFormInput] = React.useState({\n    email: \"\",\n    name: \"\",\n  });\n  const [password, setPassword] = React.useState();\n\n  const handleButtonClick = (e) => {\n    e.preventDefault();\n    setSecertSantas([...secretSantas, formInput]);\n    setFormInput({ email: \"\", name: \"\" });\n  };\n\n  const sendEmails = () => {\n    if (password !== \"istanbul2k21secretsanta\") {\n      window.alert(\"Wrong password\");\n      return;\n    }\n    let newSantas = [];\n    const santasCopy = [...secretSantas];\n    if (secretSantas.length === 1) {\n      window.alert(\"Please Enter more than 1 person\");\n      return;\n    }\n    for (let i = 0; i < secretSantas.length; i++) {\n      const randomIndex = Math.floor(Math.random() * santasCopy.length);\n      const randomSanta = santasCopy[randomIndex];\n      if (randomSanta.email === secretSantas[i].email) {\n        i--;\n        continue;\n      }\n      newSantas.push({\n        email: secretSantas[i].email,\n        secretSanta: randomSanta.name,\n      });\n      santasCopy.splice(randomIndex, 1);\n    }\n    newSantas.forEach((person) => {\n      window.Email.send({\n        Host: \"smtp.elasticemail.com\",\n        Username: \"halitfuatbatur@gmail.com\",\n        Password: \"B661DB3F65D33FA31A24C73028A859FB9AC5\",\n        To: `${person.email}`,\n        From: \"halitfuatbatur@gmail.com\",\n        Subject: \"SECRET SANTA ISTANBUL 2021\",\n        Body: `<h2>You are ${person.secretSanta}'s secret Santa enjoy ya habibi :D</h2>`,\n      }).then(() => window.alert(`an email was sent to ${person.email}`));\n    });\n  };\n\n  return (\n    <Container>\n      <Row style={{ width: \"50%\", margin: \"auto\" }}>\n        <Form>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              value={formInput.email}\n              onChange={(e) =>\n                setFormInput({ ...formInput, email: e.target.value })\n              }\n            />\n            <Form.Text className=\"text-muted\"></Form.Text>\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Name\"\n              value={formInput.name}\n              onChange={(e) =>\n                setFormInput({ ...formInput, name: e.target.value })\n              }\n            />\n          </Form.Group>\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            onClick={(e) => handleButtonClick(e)}\n          >\n            Add a secret Santa\n          </Button>\n        </Form>\n      </Row>\n      <Row className=\"mt-3\">\n        <h3>Total secret santas</h3>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            flexWrap: \"wrap\",\n            alignItems: \"center\",\n          }}\n        >\n          {secretSantas.map((secretSanta) => {\n            return (\n              <div key={secretSanta.name}>\n                <p>\n                  {secretSanta.email}{\" \"}\n                  <Badge bg=\"secondary\">{secretSanta.name}</Badge>{\" \"}\n                  <Button\n                    variant=\"danger\"\n                    onClick={() =>\n                      setSecertSantas((prevState) => {\n                        const copy = prevState.filter(\n                          (item) => item.name !== secretSanta.name\n                        );\n                        return copy;\n                      })\n                    }\n                  >\n                    delete\n                  </Button>\n                </p>\n              </div>\n            );\n          })}\n        </div>\n      </Row>\n      <Form.Control\n        type=\"password\"\n        placeholder=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        style={{ width: \"300px\", margin: \"auto\" }}\n      />\n      <Button\n        onClick={() => {\n          sendEmails();\n        }}\n      >\n        SEND EMAILS\n      </Button>\n    </Container>\n  );\n}\n\nexport default SecretSanta;\n","export default __webpack_public_path__ + \"static/media/santagif.ea5fe05a.gif\";","import './App.css';\nimport SecretSantaList from './components/SecretSanta';\nimport santaGif from \"./resources/santagif.gif\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <img src={santaGif} alt=\"Logo\" />\n        <SecretSantaList />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}